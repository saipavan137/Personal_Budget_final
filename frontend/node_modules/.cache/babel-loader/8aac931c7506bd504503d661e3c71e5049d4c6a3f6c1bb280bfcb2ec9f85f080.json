{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashm\\\\OneDrive\\\\Documents\\\\IMP\\\\nbad\\\\sam\\\\proj\\\\frontend\\\\src\\\\ConfigureBudgets\\\\visuals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport Menu from '../Menu/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Visuals() {\n  _s();\n  const [dataSource, setDataSource] = useState({\n    datasets: [{\n      budget: [],\n      expense: [],\n      backgroundColor: []\n    }],\n    labels1: [],\n    labels2: []\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [dataExists, setDataExists] = useState(false);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [months, setMonths] = useState(['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']);\n  function getRandomColor(previousColors) {\n    const letters = '0123456789ABCDEF';\n    let color;\n    do {\n      color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n    } while (previousColors.includes(color));\n    return color;\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    if (selectedMonth) {\n      axios.get(`http://localhost:3002/get-budgets/${userId}?month=${selectedMonth}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(function (res) {\n        if (res.data && res.data.length > 0) {\n          const updateData = {\n            ...dataSource\n          };\n          for (var i = 0; i < res.data.length; i++) {\n            updateData.datasets[0].budget[i] = res.data[i].budget;\n            updateData.datasets[0].backgroundColor[i] = getRandomColor(dataSource.datasets[0].backgroundColor);\n            updateData.labels1[i] = res.data[i].category;\n          }\n          setDataSource(updateData);\n          setDataExists(true);\n          setDataLoaded(true);\n        } else {\n          setDataExists(false);\n          setDataLoaded(true);\n        }\n      });\n    }\n  }, [selectedMonth]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    if (selectedMonth) {\n      axios.get(`http://localhost:3002/get-expenses/${userId}?month=${selectedMonth}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(function (res) {\n        if (res.data && res.data.length > 0) {\n          const updateExpenses = {\n            ...dataSource\n          };\n          for (var i = 0; i < res.data.length; i++) {\n            updateExpenses.datasets[0].expense[i] = res.data[i].expense;\n            updateExpenses.datasets[0].backgroundColor[i] = getRandomColor(dataSource.datasets[0].backgroundColor);\n            updateExpenses.labels2[i] = res.data[i].category;\n          }\n          setDataSource(updateExpenses);\n          setDataExists(true);\n          setDataLoaded(true);\n        } else {\n          setDataExists(false);\n          setDataLoaded(true);\n        }\n      });\n    }\n  }, [selectedMonth]);\n  const createPolarareaChart = (chartRef, data, labels) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'polarArea',\n        data: {\n          datasets: [{\n            data: data,\n            backgroundColor: dataSource.datasets[0].backgroundColor\n          }],\n          labels: labels\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const createGroupedBarChart = (chartRef, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Budget',\n            data: budget,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }, {\n            label: 'Expense',\n            data: expenses,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              stacked: false\n            },\n            y: {\n              stacked: false\n            }\n          }\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const createdonutChart = (chartRef, data, labels) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'doughnut',\n        data: {\n          datasets: [{\n            data: data,\n            backgroundColor: dataSource.datasets[0].backgroundColor\n          }],\n          labels: labels\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const chartRef = useRef(null);\n  const expenseRef = useRef(null);\n  const chart1Ref = useRef(null);\n  const chart3Ref = useRef(null);\n  const chart4Ref = useRef(null);\n  useEffect(() => createPolarareaChart(chartRef, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\n  useEffect(() => createPolarareaChart(expenseRef, dataSource.datasets[0].expense, dataSource.labels2), [dataSource]);\n  useEffect(() => createGroupedBarChart(chart1Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createdonutChart(chart3Ref, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\n  useEffect(() => createdonutChart(chart4Ref, dataSource.datasets[0].expense, dataSource.labels1), [dataSource]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectMonth\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"months\",\n        children: \"Select Month:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"months\",\n        onChange: e => setSelectedMonth(e.target.value),\n        value: selectedMonth,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, month, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), dataLoaded ? dataExists ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"groupedChart\",\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Grouped Bar Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: chart1Ref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myChart\",\n          children: [/*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"PolarArea Chart - Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"canvas-container\",\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: chartRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"PolarArea Chart - Expenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"canvas-container\",\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: expenseRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myChart\",\n          children: [/*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Donught Chart- Budgets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: chart3Ref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Donught Chart - Expenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: chart4Ref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data is not present. Please enter the data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select Month...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n_s(Visuals, \"CdP6yHYAbhi+A9r3+h0fwIKMJC8=\");\n_c = Visuals;\nexport default Visuals;\nvar _c;\n$RefreshReg$(_c, \"Visuals\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","Chart","Menu","jsxDEV","_jsxDEV","Visuals","_s","dataSource","setDataSource","datasets","budget","expense","backgroundColor","labels1","labels2","dataLoaded","setDataLoaded","dataExists","setDataExists","selectedMonth","setSelectedMonth","months","setMonths","getRandomColor","previousColors","letters","color","i","Math","floor","random","includes","token","localStorage","getItem","userId","get","headers","Authorization","then","res","data","length","updateData","category","updateExpenses","createPolarareaChart","chartRef","labels","current","chart","type","destroy","createGroupedBarChart","expenses","label","borderColor","borderWidth","options","scales","x","stacked","y","createdonutChart","expenseRef","chart1Ref","chart3Ref","chart4Ref","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","e","target","value","map","month","ref","_c","$RefreshReg$"],"sources":["C:/Users/rashm/OneDrive/Documents/IMP/nbad/sam/proj/frontend/src/ConfigureBudgets/visuals.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto';\r\nimport Menu from '../Menu/Menu';\r\n\r\nfunction Visuals() {\r\n  const [dataSource, setDataSource] = useState({\r\n    datasets: [\r\n      {\r\n        budget: [],\r\n        expense: [],\r\n        backgroundColor: [],\r\n      },\r\n    ],\r\n    labels1: [],\r\n    labels2: [],\r\n  });\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [dataExists, setDataExists] = useState(false);\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [months, setMonths] = useState([\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ]);\r\n\r\n  function getRandomColor(previousColors) {\r\n    const letters = '0123456789ABCDEF';\r\n    let color;\r\n\r\n    do {\r\n      color = '#';\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n      }\r\n    } while (previousColors.includes(color));\r\n\r\n    return color;\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    if (selectedMonth) {\r\n      axios\r\n        .get(`http://localhost:3002/get-budgets/${userId}?month=${selectedMonth}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then(function (res) {\r\n          if (res.data && res.data.length > 0) {\r\n            const updateData = { ...dataSource };\r\n            for (var i = 0; i < res.data.length; i++) {\r\n              updateData.datasets[0].budget[i] = res.data[i].budget;\r\n              updateData.datasets[0].backgroundColor[i] = getRandomColor(dataSource.datasets[0].backgroundColor);\r\n              updateData.labels1[i] = res.data[i].category;\r\n            }\r\n            setDataSource(updateData);\r\n            setDataExists(true);\r\n            setDataLoaded(true);\r\n          } else {\r\n            setDataExists(false);\r\n            setDataLoaded(true);\r\n          }\r\n        });\r\n    }\r\n  }, [selectedMonth]);\r\n\r\n  useEffect(()=>{\r\n    const token = localStorage.getItem('token');\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    if (selectedMonth) {\r\n      axios\r\n        .get(`http://localhost:3002/get-expenses/${userId}?month=${selectedMonth}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then(function (res) {\r\n          if (res.data && res.data.length > 0) {\r\n            const updateExpenses = { ...dataSource };\r\n            for (var i = 0; i < res.data.length; i++) {\r\n              updateExpenses.datasets[0].expense[i] = res.data[i].expense;\r\n              updateExpenses.datasets[0].backgroundColor[i] = getRandomColor(dataSource.datasets[0].backgroundColor);\r\n              updateExpenses.labels2[i] = res.data[i].category;\r\n            }\r\n            setDataSource(updateExpenses);\r\n            setDataExists(true);\r\n            setDataLoaded(true);\r\n          } else {\r\n            setDataExists(false);\r\n            setDataLoaded(true);\r\n          }\r\n        });\r\n    }\r\n   \r\n  },[selectedMonth])\r\n\r\n  \r\n  const createPolarareaChart = (chartRef, data, labels) => {\r\n    if (chartRef.current) {\r\n      const chart = new Chart(chartRef.current, {\r\n        type: 'polarArea',\r\n        data: {\r\n          datasets: [\r\n            {\r\n              data: data,\r\n              backgroundColor: dataSource.datasets[0].backgroundColor,\r\n            },\r\n          ],\r\n          labels: labels,\r\n        },\r\n      });\r\n\r\n      return () => {\r\n        chart.destroy();\r\n      };\r\n    }\r\n  };\r\n\r\n  const createGroupedBarChart = (chartRef, labels, budget, expenses) => {\r\n    if (chartRef.current) {\r\n      const chart = new Chart(chartRef.current, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: 'Budget',\r\n              data: budget,\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              borderWidth: 1,\r\n            },\r\n            {\r\n              label: 'Expense',\r\n              data: expenses,\r\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          scales: {\r\n            x: {\r\n              stacked: false,\r\n            },\r\n            y: {\r\n              stacked: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      return () => {\r\n        chart.destroy();\r\n      };\r\n    }\r\n  };\r\n\r\n\r\n  const createdonutChart = (chartRef, data, labels) => {\r\n    if (chartRef.current) {\r\n      const chart = new Chart(chartRef.current, {\r\n        type: 'doughnut',\r\n        data: {\r\n          datasets: [\r\n            {\r\n              data: data,\r\n              backgroundColor: dataSource.datasets[0].backgroundColor,\r\n            },\r\n          ],\r\n          labels: labels,\r\n        },\r\n      });\r\n\r\n      return () => {\r\n        chart.destroy();\r\n      };\r\n    }\r\n  };\r\n\r\n  const chartRef = useRef(null);\r\n  const expenseRef = useRef(null);\r\n  const chart1Ref = useRef(null);\r\n  const chart3Ref = useRef(null);\r\n  const chart4Ref = useRef(null);\r\n  \r\n\r\n  useEffect(() => createPolarareaChart(chartRef, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\r\n  useEffect(() => createPolarareaChart(expenseRef, dataSource.datasets[0].expense, dataSource.labels2), [dataSource]);\r\n  useEffect(() => createGroupedBarChart(chart1Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\r\n  useEffect(() => createdonutChart(chart3Ref,  dataSource.datasets[0].budget,dataSource.labels1,), [dataSource]);\r\n  useEffect(() => createdonutChart(chart4Ref,  dataSource.datasets[0].expense,dataSource.labels1,), [dataSource]);\r\n  \r\n  return (\r\n    <div>\r\n    <Menu/>\r\n      <div className='selectMonth'>\r\n        <label htmlFor=\"months\">Select Month:</label>\r\n        <select id=\"months\" onChange={(e) => setSelectedMonth(e.target.value)} value={selectedMonth}>\r\n          <option value=\"\">Select Month</option>\r\n          {months.map((month) => (\r\n            <option key={month} value={month}>\r\n              {month}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {dataLoaded ? (\r\n             dataExists ? (\r\n              <section>\r\n      <section className=\"chart-container\">\r\n\r\n<div className='groupedChart'>\r\n      <article className=\"chart\">\r\n          <h1>Grouped Bar Chart</h1>\r\n          <p>\r\n            <canvas ref={chart1Ref} />\r\n          </p>\r\n        </article>\r\n        </div>\r\n\r\n<div className='myChart'>\r\n  <article className=\"chart\">\r\n  <h1>PolarArea Chart - Budget</h1>\r\n  <div className=\"canvas-container\">\r\n    <canvas ref={chartRef} />\r\n  </div>\r\n</article>\r\n\r\n<article className=\"chart\">\r\n  <h1>PolarArea Chart - Expenses</h1>\r\n  <div className=\"canvas-container\">\r\n    <canvas ref={expenseRef} />\r\n  </div>\r\n</article>\r\n</div>\r\n\r\n<div className='myChart'>\r\n       <article className=\"chart\">\r\n          <h1>Donught Chart- Budgets</h1>\r\n          <p>\r\n            <canvas ref={chart3Ref} />\r\n          </p>\r\n        </article>\r\n       <article className=\"chart\">\r\n         <h1>Donught Chart - Expenses</h1>\r\n         <p>\r\n           <canvas ref={chart4Ref} />\r\n         </p>\r\n       </article>\r\n       </div>\r\n       \r\n      </section>\r\n       </section>\r\n     \r\n       ) : (\r\n        <div>\r\n          <p>Data is not present. Please enter the data.</p>\r\n        </div>\r\n       )\r\n         \r\n       ) : (\r\n        <div>\r\n          <p>Select Month...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Visuals;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}